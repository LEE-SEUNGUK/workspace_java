package ch16_network.chat;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.ArrayList;

/**
 * class Name : MultiChatServer Author : Smoothie Created Date : 2024. 9. 13.
 * Version : 1.0 Purpose : 멀티채팅 서버 Description : 소켓서버, 클라이언트 관리
 */
public class MultiChatServer {
	private ArrayList<Client> clientList = new ArrayList<>();

	// 접속 클라이언트에게 메세지를 전해주기 위함
	public class Client extends Thread {
		Socket soc;
		PrintWriter writer;
		String name;

		public Client(Socket soc) {
			this.soc = soc;
			try {
				writer = new PrintWriter(soc.getOutputStream());
			} catch (IOException e) {
				e.printStackTrace();
			}
		}

		// 접속 클라이언트에게 모두 메시지 전송
		public void sendAll(String msg) {
			for (int i = 0; i < clientList.size(); i++) {
				clientList.get(i).writer.println(msg);
				clientList.get(i).writer.flush();
			}
		}

		@Override
		public void run() {
			// 접속시 다른 사용자들에게 접속 알림
			try {
				BufferedReader reader = new BufferedReader(
						new InputStreamReader(soc.getInputStream()));
				name = reader.readLine(); // 입장 시 닉네임을 전달받음
				sendAll(name + "님이 입장하였습니다");
				while(true) {
					String msg = reader.readLine();
					if(msg == null || msg.isEmpty()) {
						break;
					}
					sendAll(msg); // 전체에게 메시지 전송
				}
			} catch (IOException e) {
				e.printStackTrace();
			} finally {
				sendAll(name + "님이 퇴장하셨습니다.")
			}
		}

	}
}